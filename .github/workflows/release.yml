name: Github Release
on:
  workflow_dispatch:
    # Enable manual run
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    steps:
      - name: Get latest published release tag
        id: get_latest_release
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - name: Generate changelog since last published release
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          future_release: ${{ github.ref }}
          since_tag: ${{ steps.get_latest_release.outputs.release }}
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md


  draft-release:
    name: Draft Github release
    needs: generate-changelog
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Download changelog
      uses: actions/download-artifact@v2
      with:
        name: changelog
    - name: Draft release with changelog
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Menu Editor ${{ github.ref }}
        body_path: CHANGELOG.md
        draft: true
        prerelease: false


  create-build:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [macOS, Windows]
        include:
        - os: macos-10.15 # Catalina
          target: macOS
          build_target: macos
          build_path: build/macos/Build/Products/Release
          asset_extension: .zip
          asset_content_type: application/zip
        - os: windows-2019
          target: Windows
          build_target: windows
          build_path: build\windows\runner\Release
          asset_extension: .zip
          asset_content_type: application/zip
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    needs: draft-release
    steps:
    # Set up Flutter.
    - name: Clone Flutter repository with master channel
      uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8
      with:
        channel: master

    - name: Enable desktop support
      run: |
        flutter config --enable-macos-desktop
        flutter config --enable-windows-desktop
    - run: flutter doctor -v

    # Checkout editor code, recreate missing files, and get packages.
    - name: Checkout editor code
      uses: actions/checkout@v2
    - run: flutter create .
    - run: flutter pub get

    # Build the application.
    - run: flutter build -v ${{ matrix.build_target }} --release

    # Package the build.
    - name: Copy VC redistributables to release directory for Windows
      if: matrix.target == 'Windows'
      run: |
        Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') .
        Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') .
        Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') .
    - name: Compress build for macOS
      if: matrix.target == 'macOS'
      run: ditto -c -k --sequesterRsrc --keepParent Flutter\ Editor.app $GITHUB_WORKSPACE/menu_editor_${{ matrix.target }}.zip
      working-directory: ${{ matrix.build_path }}
    - name: Compress build for Windows
      if: matrix.target == 'Windows'
      run: compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\menu_editor_${{ matrix.target }}.zip
      working-directory: ${{ matrix.build_path }}

    # Upload the build.
    - name: Add packaged build to release draft
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.draft-release.outputs.upload_url }}
        asset_path: ./menu_editor_${{ matrix.target }}${{ matrix.asset_extension }}
        asset_name: menu_editor_${{ matrix.target }}${{ matrix.asset_extension }}
        asset_content_type: ${{ matrix.asset_content_type }}
